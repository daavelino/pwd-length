/* 
  The result of a comparison between the password entropy and the entropy of 
 the search space generated by it. It is always a number between 0 and 1, 
 the bigger the stronger.
 
  Please check at 

  https://en.wikipedia.org/wiki/Password_strength#Entropy_as_a_measure_of_password_strength 

  for a conceptual overview.
  */

var default_alphabet = {
  1:{"name":"Arabic numerals (0–9)","count":10},
  2:{"name":"hexadecimal numerals (0–9, A–F)","count":16},
  3:{"name":"Case insensitive Latin alphabet (a–z or A–Z)","count":26},
  4:{"name":"Case insensitive alphanumeric (a–z or A–Z, 0–9)","count":36},
  5:{"name":"Case sensitive Latin alphabet (a–z, A–Z)","count":52},
  6:{"name":"Case sensitive alphanumeric (a–z, A–Z, 0–9)","count":62},
  7:{"name":"All ASCII printable characters except space","count":94},
  8:{"name":"All ASCII printable characters","count":95},
  9:{"name":"All extended ASCII printable characters","count":218},
  10:{"name":"Binary (0–255 or 8 bits or 1 byte)","count":256},
  11:{"name":"Diceware word list","count":7776}
};

var security_range = {
  "weak":[0,20],
  "fair":[20,40],
  "good":[40,60],
  "strong":[60,80],
  "excellent":[80,100]
}

function entropy(alphabet_length, word_length) {
  if (alphabet_length == 0 || word_length == 0) {
    return 0; 
  };
  var entropy = word_length * Math.log(alphabet_length) / Math.log(2);

  return entropy;

};

function countUnique(word) {
  // Returns the number of unique characters in a given word.
  var length = word.length;
  if (length <= 0) {
    return 0;
  };
  var unique_values = [];
  for (var i=0; i<length; i++) {
    if (! unique_values.includes(word[i])) {
      unique_values.push(word[i]);
    } 
  }

  return unique_values.length; 

};

function evaluate(result) {
  const range_keys = Object.keys(security_range);
  for (var i=0;i<range_keys.length;i++) {
    let actual_key = range_keys[i];
    let min = security_range[actual_key][0] / 100;
    let max = security_range[actual_key][1] / 100;
    if (result >= min && result <= max) {

      return(actual_key);

    }
  }
}

function pwdStrength() {

  var alphabet_size = default_alphabet[8]["count"]; //All ASCII printable characters. 
  var password = "";
  var password_size = 0;
  var password_alphabet_size = 0;
  var password_entropy = 0;
  var search_space_entropy = 0;
  var result = 0;
  var security_label = "";

  // Get the value at input each time user type a new character.
  password = document.getElementById("password").value;
  password_size = password.length;
  password_alphabet_size = countUnique(password);

  search_space_entropy = entropy(alphabet_size, password_size);
  password_entropy = entropy(password_alphabet_size, password_size); 

  if (search_space_entropy > 0) {
    result = password_entropy / search_space_entropy;
  } else {
    result = 0;
  };
 
  security_label = evaluate(result);
  
  console.log(alphabet_size, password_size, search_space_entropy, password_entropy, result, security_label, password);

  return security_label;
  
};
